program -> statement_list

statement_list -> statement statement_list

//######################################################
// statement tree
//######################################################

statement ->
    assignment_statement
    | if_statement
    | while_statement
    | for_statement
    | block

assignment_statement -> 
    "make" IDENTIFIER expression ";"

if_statement -> 
    "if" "(" expression ")" block ("elif" "(" expression ")" block)* ("else" block)?

while_statement -> 
    "while" "(" expression ")" block

for_statement -> 
    "for" "(" assignment_statement ";" expression ";" expression ")" block

block -> 
    "{" statement_list "}"

//######################################################
// expression tree
//######################################################
expression -> comparison ;

comparison ->
    arithmetic ( (">" | ">=" | "<" | "<=" | "!=" | "==" | "and" | "or") arithmetic )* ;

arithmetic ->
    unary ( ("+" | "-" | "*" | "/" | "%") unary )* ;

unary ->
    ("not" | "-" | "++" | "--")* literal

literal ->
    IDENTIFIER
    | NUMBER
    | STRING
    | BOOLEAN
    | "(" expression ")" ;